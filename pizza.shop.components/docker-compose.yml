version: '3'
networks:
  pizza-shop.net:
    driver: bridge
services:

  # service api.pizza-shop : api pour la prise de commandes
  #
  api.pizza-shop:
    image: 'canals/php:8.2'
    env_file: ./shop.env
    ports:
      - '2080:80'
    volumes:
      - ../shop.pizza-shop/public:/var/www/html
      - ../shop.pizza-shop:/var/www
    working_dir: /var/www/
    networks:
      pizza-shop.net:
        aliases:
          - api.pizza-shop.local
    depends_on:
      pizza-shop.commande.db:
        condition: service_started
      pizza-shop.catalogue.db:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  # service api.pizza-catalog : api pour le catalogue
  #
  api.pizza-catalog:
    image: 'canals/php:latest'
    env_file: ./cat.env
    ports:
      - '2180:80'
    volumes:
      - ../catalog.pizza-shop/public:/var/www/html
      - ../catalog.pizza-shop:/var/www
    working_dir: /var/www/
    networks:
      pizza-shop.net:
        aliases:
          - api.pizza-catalog.local
    depends_on:
      - pizza-shop.catalogue.db


  # service sql pour le stockage des commandes -
  # utilisé par l'api order
  pizza-shop.commande.db:
    image: 'mariadb:latest'
    command: '--default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci'
    env_file: ./shop.env
    ports:
      - '3307:3306'
    networks:
      - pizza-shop.net
    volumes:
      - ../shop.pizza-shop/sql:/var/sql

  # service sql pour le catalogue des pizzas -
  # utilisé par l'api order
  pizza-shop.catalogue.db:
    image: 'postgres:latest'
    env_file: ./cat.env
    ports:
      - '5432:5432'
    networks:
      - pizza-shop.net
    volumes:
      - ../shop.pizza-shop/sql:/var/sql'
  #
  # service administration des bases sql
  #
  adminer:
    image: adminer
    ports:
      - '8080:8080'
    networks:
      - pizza-shop.net

######################################
###  AUTH Service : service d'authentification JWT
###  api api.auth : auth, check, refresh de token JWT
###  utilise sa propre base de données
######################################
  api.pizza-auth:
    image: 'canals/php:latest'
    env_file: ./auth.env
    ports:
      - '2780:80'
    volumes:
      - ../auth.pizza-shop/public:/var/www/html
      - ../auth.pizza-shop:/var/www
    working_dir: /var/www
    networks:
      pizza-shop.net:
        aliases:
          - auth.pizza-shop.local
    depends_on:
      - pizza-shop.auth.db

  pizza-shop.auth.db:
    image: 'mariadb:latest'
    command: '--default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci'
    env_file: ./auth.env
    ports:
      - '3308:3306'
    networks:
      - pizza-shop.net
    volumes:
      - ../auth.pizza-shop/sql:/var/sql

  #######################################
  ### RabbitMQ Service
  #######################################
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '15672:15672'
      - '5672:5672'
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 8s
      timeout: 30s
      retries: 3
    networks:
      - pizza-shop.net
    volumes:
      - ../rabbitmq.pizza-shop:/var/lib/rabbitmq
    env_file: ./rab.env